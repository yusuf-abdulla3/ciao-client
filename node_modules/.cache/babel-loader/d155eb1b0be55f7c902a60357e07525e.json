{"ast":null,"code":"var _jsxFileName = \"/Users/yusuf/lighthouse/Ciao-1/client/src/components/Card/AddImg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddImg(props) {\n  _s();\n\n  const {\n    userId,\n    cardId,\n    showImg,\n    setShowImg\n  } = props;\n  const [search, setSearch] = useState(\"\");\n  const [clientId, setClientId] = useState(\"xbh0A-ll5iy3nyH4JPGfKFHvzVYdOU_MfEaiX0U3T4I\");\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, SetIsError] = useState(false);\n  const [selectedImage, setSelectedImage] = useState({});\n  const [selectedImageId, setSelectedImageId] = useState(\"\");\n  const [selectText, setSelectText] = useState(\"\");\n  const history = useHistory();\n\n  const onCancel = e => {\n    history.push('/createcard');\n  };\n\n  const handleSelectImage = data => {\n    const {\n      img,\n      id\n    } = data;\n\n    if (!selectedImage[id]) {\n      const obj = {};\n      obj[id] = {\n        img,\n        id\n      };\n      setSelectedImage({ ...obj\n      });\n      setSelectedImageId(id);\n    } else {\n      delete selectedImage[id];\n      setSelectedImage({});\n      setSelectedImageId(\"\");\n    }\n  };\n\n  const renderImages = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    }\n\n    return data.map(image => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `images ${image.id === selectedImageId ? \"selected\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.urls.small,\n          \"data-img\": image.urls.small,\n          \"data-id\": image.id,\n          onClick: event => {\n            handleSelectImage(event.target.dataset);\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderError = () => {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"unable to get gifs. please try again in few minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    SetIsError(false);\n    setIsLoading(true);\n    console.log(search);\n    const url = `https://api.unsplash.com/search/photos`;\n    console.log('Unsplashkey', typeof process.env.REACT_APP_UNSPLASH_KEY, process.env.REACT_APP_UNSPLASH_KEY);\n\n    try {\n      const results = await axios(url, {\n        params: {\n          query: search\n        },\n        headers: {\n          Authorization: process.env.REACT_APP_UNSPLASH_KEY\n        }\n      });\n      console.log(\"RESULTS: \", results);\n      setData(results.data.results);\n    } catch (err) {\n      console.log(\"THERE IS AN ERROR\");\n      SetIsError(true);\n      setTimeout(() => SetIsError(false), 4000);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleText = event => {\n    setSelectText(event.target.value);\n  };\n\n  const handleImgSubmit = event => {\n    event.preventDefault();\n    console.log('clicked on add image submit');\n    console.log('clicked on submit img', {\n      selectedImage\n    }, {\n      selectedImageId\n    });\n    const reactData = {\n      img: selectedImage[selectedImageId].img,\n      selectText,\n      userId,\n      cardId\n    };\n    console.log('cardid cardid cardid', cardId); // const url = \"http://localhost:3001/api/img\";\n\n    axios.post(\"http://localhost:3001/api/img/\", reactData).then(res => console.log(\"data Img send\", res)).catch(err => console.log(\"--->--\", err.data));\n    window.location.href = `http://localhost:3000/card/${cardId}`; // window.location.reload(false);\n    // setShowImg(false);\n    // history.push(\"/createcard\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderError()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => handleImgSubmit(event),\n      className: \"contact-form mycontformmodal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group myformgrp\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: handleSearchChange,\n          type: \"text\",\n          placeholder: \"search\",\n          className: \"form-control form-controlmodal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          type: \"submit\",\n          className: \"searchicon\",\n          children: \"Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group myformgrp\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          onChange: handleText,\n          placeholder: \"Enter text here\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        class: \"btn btn-primary mybtncss\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedImage[selectedImageId] && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage[selectedImageId].img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apidata\",\n      children: renderImages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddImg, \"H/+XApkoL//nQmb/iRhFCDxTCb8=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddImg;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddImg\");","map":{"version":3,"sources":["/Users/yusuf/lighthouse/Ciao-1/client/src/components/Card/AddImg.js"],"names":["React","useState","axios","useHistory","AddImg","props","userId","cardId","showImg","setShowImg","search","setSearch","clientId","setClientId","data","setData","isLoading","setIsLoading","isError","SetIsError","selectedImage","setSelectedImage","selectedImageId","setSelectedImageId","selectText","setSelectText","history","onCancel","e","push","handleSelectImage","img","id","obj","renderImages","map","image","urls","small","event","target","dataset","renderError","handleSearchChange","value","handleSubmit","preventDefault","console","log","url","process","env","REACT_APP_UNSPLASH_KEY","results","params","query","headers","Authorization","err","setTimeout","handleText","handleImgSubmit","reactData","post","then","res","catch","window","location","href"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function AddImg(props) {\n  const {userId, cardId, showImg, setShowImg} = props;\n  const [search, setSearch] = useState(\"\");\n  const [clientId, setClientId] = useState(\n    \"xbh0A-ll5iy3nyH4JPGfKFHvzVYdOU_MfEaiX0U3T4I\"\n  );\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, SetIsError] = useState(false);\n  const [selectedImage, setSelectedImage] = useState({});\n  const [selectedImageId, setSelectedImageId] = useState(\"\");\n  const [selectText, setSelectText] = useState(\"\");\n  const history = useHistory();\n\n\n  const onCancel =(e)=> {\n    history.push('/createcard');\n  }\n  const handleSelectImage = (data) => {\n    const { img, id } = data;\n\n    if (!selectedImage[id]) {\n      const obj = {};\n      obj[id] = { img, id };\n      setSelectedImage({ ...obj });\n      setSelectedImageId(id);\n    } else {\n      delete selectedImage[id];\n\n      setSelectedImage({ });\n      setSelectedImageId(\"\");\n    }\n\n  };\n\n  const renderImages = () => {\n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    return data.map((image) => {\n      return (\n        <div\n          className={`images ${\n            image.id === selectedImageId ? \"selected\" : \"\"\n          }`}\n          key={image.id}\n        >\n          <img\n            src={image.urls.small}\n            data-img={image.urls.small}\n            data-id={image.id}\n            onClick={(event) => {\n              handleSelectImage(event.target.dataset); \n            }}\n            alt=''\n          />\n        </div>\n      );\n    });\n  };\n  const renderError = () => {\n    if (isError) {\n      return <div>unable to get gifs. please try again in few minutes</div>;\n    }\n  };\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    SetIsError(false);\n    setIsLoading(true);\n    console.log(search);\n    const url = `https://api.unsplash.com/search/photos`;\n    console.log('Unsplashkey', typeof process.env.REACT_APP_UNSPLASH_KEY, process.env.REACT_APP_UNSPLASH_KEY);\n    try {\n      const results = await axios(url, {\n        params: { query: search },\n        headers: {\n          Authorization:\n          process.env.REACT_APP_UNSPLASH_KEY,\n        },\n      });\n      console.log(\"RESULTS: \", results);\n      setData(results.data.results);\n    } catch (err) {\n      console.log(\"THERE IS AN ERROR\");\n      SetIsError(true);\n      setTimeout(() => SetIsError(false), 4000);\n    }\n    setIsLoading(false);\n  };\n\n  const handleText = (event) => {\n    setSelectText(event.target.value);\n  };\n  const handleImgSubmit = (event) => {\n    event.preventDefault();\n    console.log('clicked on add image submit');\n    console.log('clicked on submit img',{selectedImage}, {selectedImageId});\n\n    const reactData = { img: selectedImage[selectedImageId].img, selectText, userId, cardId};\n    console.log('cardid cardid cardid', cardId);\n    // const url = \"http://localhost:3001/api/img\";\n    \n    axios\n      .post(\"http://localhost:3001/api/img/\", reactData)\n      .then((res) => console.log(\"data Img send\", res))\n      .catch((err) => console.log(\"--->--\", err.data));\n  \n    \n    window.location.href = `http://localhost:3000/card/${cardId}`;\n    // window.location.reload(false);\n    // setShowImg(false);\n    // history.push(\"/createcard\");\n  }\n\n  \n\n  return (\n    <>\n      <div>{renderError()}</div>\n      <br />\n      <form onSubmit={(event) => handleImgSubmit(event)} className=\"contact-form mycontformmodal\">\n        <div className=\"form-group myformgrp\">\n          <input\n            value={search}\n            onChange={handleSearchChange}\n            type=\"text\"\n            placeholder=\"search\"\n            className=\"form-control form-controlmodal\"\n          />\n          <button onClick={handleSubmit} type=\"submit\" className=\"searchicon\">\n            Go\n          </button>\n        </div>\n        <div className=\"form-group myformgrp\">\n          <textarea\n            type=\"text\"\n            onChange={handleText}\n            placeholder=\"Enter text here\"\n            className=\"form-control\"\n          />\n       </div>\n        <button type=\"submit\" value=\"Submit\" class=\"btn btn-primary mybtncss\">Submit</button>\n        {/* /* <input type=\"submit\" value=\"Cancel\" onClick={onCancel}></input> */}\n\n      </form> \n      <div>\n        {selectedImage[selectedImageId] && (\n          <img src={selectedImage[selectedImageId].img} alt=''/>\n       )}\n      </div>\n      <div className=\"apidata\">{renderImages()}</div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}