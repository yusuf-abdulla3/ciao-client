{"ast":null,"code":"var _jsxFileName = \"/Users/yusuf/lighthouse/ciao-app/Ciao-1/client/src/components/Card/AddGif.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"./Button\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport '../../App.css';\nimport FileUploadForm from \"./FileUploadForm\";\nimport classNames from \"classnames\";\nimport { useHistory } from 'react-router-dom';\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddGif(props) {\n  _s();\n\n  const {\n    userId,\n    cardId,\n    showGif,\n    setShowGif\n  } = props;\n  console.log('useerid gif', userId, cardId);\n\n  const onClick = () => {\n    console.log('clicked on add Gif');\n  };\n\n  const title = \"Add Gif\";\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, SetIsError] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [selectedGif, setSelectedGif] = useState({});\n  const [selectedGifId, setSelectedGifId] = useState(\"\");\n  const [selectText, setSelectText] = useState(\"\");\n  const history = useHistory(); // const [showGif, setShowGif] = useState(false);\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleSelectGif = data => {\n    const {\n      gif,\n      id\n    } = data;\n\n    if (!selectedGif[id]) {\n      const obj = {};\n      obj[id] = {\n        gif,\n        id\n      };\n      setSelectedGif({ ...obj\n      });\n      setSelectedGifId(id);\n    } else {\n      delete selectedGif[id]; // console.log('afterdel',gifsData);\n\n      setSelectedGif({ ...selectedGif\n      });\n      setSelectedGifId('');\n    }\n  };\n\n  console.log('testing', selectedGif);\n\n  const renderGifs = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    }\n\n    return data.map(ele => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `gifs ${ele.id === selectedGifId ? \"selected\" : \"\"} `,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ele.images.fixed_height.url,\n          \"data-gif\": ele.images.fixed_height.url,\n          \"data-id\": ele.id,\n          onClick: event => {\n            handleSelectGif(event.target.dataset);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderError = () => {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"unable to get gifs. please try again in few minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    SetIsError(false);\n    setIsLoading(true);\n    console.log('eennnnnvvv', typeof process.env.REACT_APP_GIPHY_KEY);\n\n    try {\n      const results = await axios(\"https://api.giphy.com/v1/gifs/search\", {\n        params: {\n          api_key: process.env.REACT_APP_GIPHY_KEY,\n          q: search\n        }\n      });\n      console.log(results);\n      setData(results.data.data);\n    } catch (err) {\n      SetIsError(true);\n      setTimeout(() => SetIsError(false), 4000);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleText = e => {\n    setSelectText(e.target.value);\n  };\n\n  const handlePostSubmit = e => {\n    e.preventDefault();\n    console.log('@@#$tyui', cardId);\n    const reactData = {\n      selectedGif,\n      selectText,\n      selectedGifId,\n      userId,\n      cardId\n    };\n    const url = 'http://localhost:3001/api/gif/';\n\n    let sendData = () => {\n      axios.post(url, reactData).then(res => console.log('data send', res)).catch(err => console.log('--->--', err.data));\n    };\n\n    sendData();\n    window.location.reload(false); // setShowGif(false);\n    // history.push(`/card/${cardId}`);\n    // history.push(`/cards`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderError()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      className: \"contact-form mycontformmodal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group myformgrp\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: handleSearchChange,\n          type: \"text\",\n          placeholder: \"search\",\n          className: \"form-control form-controlmodal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          type: \"submit\",\n          className: \"searchicon\",\n          children: \"Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group myformgrp\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          onChange: handleText,\n          placeholder: \"Enter text here\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-primary mybtncss\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedGif[selectedGifId] && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedGif[selectedGifId].gif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apidata\",\n      children: renderGifs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddGif, \"iQJeadXtuMxNMYDKgNpqKCzd41k=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddGif;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddGif\");","map":{"version":3,"sources":["/Users/yusuf/lighthouse/ciao-app/Ciao-1/client/src/components/Card/AddGif.js"],"names":["Button","useState","useEffect","axios","FileUploadForm","classNames","useHistory","Modal","AddGif","props","userId","cardId","showGif","setShowGif","console","log","onClick","title","data","setData","isLoading","setIsLoading","isError","SetIsError","search","setSearch","selectedGif","setSelectedGif","selectedGifId","setSelectedGifId","selectText","setSelectText","history","show","setShow","handleClose","handleSelectGif","gif","id","obj","renderGifs","map","ele","images","fixed_height","url","event","target","dataset","renderError","handleSearchChange","value","handleSubmit","preventDefault","process","env","REACT_APP_GIPHY_KEY","results","params","api_key","q","err","setTimeout","handleText","e","handlePostSubmit","reactData","sendData","post","then","res","catch","window","location","reload"],"mappings":"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","sourcesContent":["import Button from \"./Button\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport '../../App.css';\nimport FileUploadForm from \"./FileUploadForm\";\nimport classNames from \"classnames\";\nimport { useHistory } from 'react-router-dom';\nimport { Modal } from \"react-bootstrap\";\n\nexport default function AddGif(props) {\n  const {userId, cardId, showGif, setShowGif} = props;\n\n  console.log('useerid gif', userId, cardId );\n  const onClick = () => {\n    console.log('clicked on add Gif');\n  }\n  \n  const title = \"Add Gif\";\n  const [data, setData] =  useState([]) \n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, SetIsError] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [selectedGif, setSelectedGif] = useState({});\n  const [selectedGifId, setSelectedGifId] = useState(\"\");\n  const [selectText, setSelectText] = useState(\"\");\n  const history = useHistory();\n  // const [showGif, setShowGif] = useState(false);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleSelectGif = (data) => {\n    const { gif, id } = data\n    if(!selectedGif[id]){\n      const obj = {}\n      obj[id] = {gif, id}\n      setSelectedGif({...obj});\n      setSelectedGifId(id);\n    }else{\n      delete selectedGif[id]\n      // console.log('afterdel',gifsData);\n      setSelectedGif({...selectedGif});\n      setSelectedGifId('');\n    }\n    \n    \n    \n  }\n  console.log('testing', selectedGif);\n  \n  const renderGifs = () => {\n    if(isLoading){\n      return <div>Loading...</div>\n    }\n    return data.map(ele => {\n      return (\n        <div className={`gifs ${ele.id === selectedGifId ? \"selected\" : \"\" } `} key={ele.id} >\n          <img src={ele.images.fixed_height.url} data-gif={ele.images.fixed_height.url} data-id={ ele.id } onClick={(event)=>{handleSelectGif(event.target.dataset)}}/>\n\n        </div>\n      )\n\n\n    })\n  }\n  const renderError = () => {\n    if(isError){\n      return (\n        <div>\n          unable to get gifs. please try again in few minutes\n        </div>\n      )\n    }\n  }\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value);\n  }\n  const handleSubmit = async (event) => {\n      event.preventDefault()\n      SetIsError(false);\n      setIsLoading(true);\n      console.log('eennnnnvvv', typeof process.env.REACT_APP_GIPHY_KEY);\n      try{\n        const results = await axios(\"https://api.giphy.com/v1/gifs/search\",{\n          params: {\n            api_key: process.env.REACT_APP_GIPHY_KEY,\n            q: search\n          }\n        })\n        console.log(results);\n        setData(results.data.data);\n      }catch(err){\n        SetIsError(true);\n        setTimeout(()=>SetIsError(false), 4000)\n      }\n      setIsLoading(false)\n      \n  }\n  \n  const handleText = (e) => {\n    setSelectText(e.target.value);\n  }\n  const handlePostSubmit = (e) => {\n    e.preventDefault();\n    console.log('@@#$tyui', cardId);\n    const reactData = {selectedGif, selectText, selectedGifId, userId, cardId}\n    const url = 'http://localhost:3001/api/gif/'\n    let sendData = () => {\n    axios.post(url, reactData)\n      .then(res => console.log('data send',res))\n      .catch(err => console.log('--->--',err.data))\n    }\n    sendData();\n    window.location.reload(false);\n    // setShowGif(false);\n    // history.push(`/card/${cardId}`);\n    // history.push(`/cards`);\n  }\n  return (\n    <>\n    <div>\n      {renderError()}\n    </div>\n    {/* <FileUploadForm placeholder=\"search\" onChange={handleSearchChange} value = {search}/> */}\n    <br/>\n    {/*  */}\n    \n    <form onSubmit={handlePostSubmit} className=\"contact-form mycontformmodal\">\n    <div className=\"form-group myformgrp\">\n        <input value = {search} \n          onChange = {handleSearchChange}\n          type = \"text\"\n          placeholder = \"search\"\n          className=\"form-control form-controlmodal\"\n        />\n        <button onClick={handleSubmit} type=\"submit\" className=\"searchicon\">Go</button>\n      </div>\n      <div className=\"form-group myformgrp\">\n        <textarea type=\"text\" onChange = {handleText} placeholder = \"Enter text here\" className=\"form-control\"/>\n      </div>\n      {/* <button type = \"Submit\" onClick={handlePostSubmit}>Submit</button> */}\n       <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary mybtncss\">Submit</button> \n     </form>\n    <div>\n      { selectedGif[selectedGifId] &&\n\n      <img src={selectedGif[selectedGifId].gif} />\n      }\n    </div>  \n    <div className=\"apidata\">{renderGifs()}</div>\n    {/* <div className=\"\">\n      <button type=\"submit\">Add Gifphy</button>\n    </div> */}\n      {/* <Button onClick = {onClick} title = {title}/>  */}\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}